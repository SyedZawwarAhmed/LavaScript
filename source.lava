proc abcd (a: number, c: string): number {
  return 5;
}

dynamic a: number = 3 / 5 - 4;

interface E {
    method GetArea(): void;
}

class Car implements E {
  wheel: number;
  method ad(): number {
    if (1==2) {
      static b: number = 4;
    } else {
      return a;
    }
  }
  method GetArea(): void {}
}
 
dynamic b: number = abcd(1, "abc", 3);


interface B {
    method GetArea(c: string): number;
}


proc abc(a: number): number {
  dynamic c: number[][];
  return a;
}

proc bc(): void {
  dynamic c: number[];
}

dynamic c: string = "a" + "b";
static d: string = "afdlkjfdl";

proc fun(): number {

}

until (fun() != 4) {

}

fun(a);

if (c > d) {  
  ?return;
}

class C {
  method abc(a: string): void {return;}
}

class Wheel {
  
}


proc func(): Car {
  dynamic car: Car;
  return car;
}

proc abcd (): number {

}

dynamic newCar: Car;
dynamic b: number = a;

dynamic n1: number = abcd();

dynamic car1: Car = init Car(a);
?dynamic b: number = abcd();

until (1==2) {
  skip;
  exit;
}